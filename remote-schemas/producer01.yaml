asyncapi: 3.0.0
info:
  title: Messages App
  version: 1.0.0
  description: |-
    The Smartylighting Streetlights API allows you to remotely manage the city
    lights.

    * Turn a specific streetlight on/off ðŸŒƒ
    * Dim a specific streetlight ðŸ˜Ž
    * Receive real-time information about environmental lighting conditions ðŸ“ˆ
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
defaultContentType: application/json
servers:
  scram-connections:
    host: test.mykafkacluster.org:18092
    protocol: kafka-secure
    description: Test broker secured with scramSha256
    security:
      - $ref: '#/components/securitySchemes/saslScram'
    tags:
      - name: env:test-scram
        description: This environment is meant for running internal tests through
          scramSha256
      - name: kind:remote
        description: This server is a remote server. Not exposed by the application
      - name: visibility:private
        description: This resource is private and only available to certain users
  mtls-connections:
    host: test.mykafkacluster.org:28092
    protocol: kafka-secure
    description: Test broker secured with X509
    security:
      - $ref: '#/components/securitySchemes/certs'
    tags:
      - name: env:test-mtls
        description: This environment is meant for running internal tests through mtls
      - name: kind:remote
        description: This server is a remote server. Not exposed by the application
      - name: visibility:private
        description: This resource is private and only available to certain users


channels:
  newMessageEventChannel:
    messages:
      newMessageEvent:
        $ref: '#/components/messages/newMessageCloudEvent'
    description: New Message Event Channel
  
operations:
  sendLightMeasurement:
    action: send
    channel:
      $ref: '#/channels/newMessageEventChannel'
    summary: Operation sending a new message event.
    traits:
      - $ref: '#/components/operationTraits/kafka'
    messages:
      - $ref: '#/channels/newMessageEventChannel/messages/newMessageEvent'

components:
  messages:
   newMessageCloudEvent:
      name: newMessageEventMessage
      title: New Message Received
      summary: Inform about environmental lighting conditions of a particular
        streetlight.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/lightMeasuredPayloadCloudEvent'

  
  schemas:
    lightMeasuredPayloadCloudEvent:
      allOf:
        - $ref: '#/components/schemas/lightMeasuredPayloadData'
        - $ref: '#/components/schemas/cloudEvent'   
   
    lightMeasuredPayloadData:
      type: object         
      properties:
        data:
          $ref: '#/components/schemas/lightMeasuredPayload'   
        dataschema:
          type: string
          enum: 
            - '#/components/schemas/sentAt' 
    
    cloudEvent:
      type: object
      $ref: 'https://raw.githubusercontent.com/cloudevents/spec/refs/heads/main/cloudevents/formats/cloudevents.json'

    lightMeasuredPayload:
      type: object
      properties:
        lumens:
          type: integer
          minimum: 0
          description: Light intensity measured in lumens.
        sentAt:
          $ref: '#/components/schemas/sentAt'
    
    sentAt:
      type: string
      format: date-time
      description: Date and time when the message was sent.



  securitySchemes:
    saslScram:
      type: scramSha256
      description: Provide your username and password for SASL/SCRAM authentication
    certs:
      type: X509
      description: Download the certificate files from service provider
  parameters:
    streetlightId:
      description: The ID of the streetlight.
  messageTraits:
    commonHeaders:
      headers:
        type: object
        properties:
          my-app-header:
            type: integer
            minimum: 0
            maximum: 100
  operationTraits:
    kafka:
      bindings:
        kafka:
          clientId:
            type: string
            enum:
              - my-app-id